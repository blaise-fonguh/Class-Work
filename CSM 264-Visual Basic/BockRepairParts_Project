Option Strict On 
 
Imports System.ComponentModel 
 	
Public Class Form1 
 
    Private GRANDTOTADECIMAL As Decimal 
    Private hits As Integer 
 
 
    Private Sub Form1_Load(sender As Object, e As EventArgs) Handles MyBase.Load  
    End Sub 
 
    Private Sub TradeinTextBox_TextChanged(sender As Object, e As EventArgs) Handles 
TradeinTextBox.TextChanged 
    End Sub 
 
    Private Sub ComuteButton_Click(sender As Object, e As EventArgs) Handles 
ComuteButton.Click 
 
        Try 
            'Declare variabales  
            Dim TOTALEXTRAS_DECIMAL As Decimal 
            Dim PriceDecimal As Decimal 
            Dim Trade_In_Decimal As Decimal 
            Dim Wholesale_Discount_Decimal As Decimal 
            Dim SubTotal_Decimal As Decimal 
            Dim sales_Tax_Decimal As Decimal 
            Dim Total_Due_Decimal As Decimal 
 
            ' Declare Exterior Constants  
            Const NO_EXTERIOR_EXTRAS_DECIMAL As Decimal = 0.00D 
            Const PAINT_TOUCH_UP_DECIMAL As Decimal = 250D 
            Const UNDERCOAT_DECIMAL As Decimal = 300D 
            Const BOTH_DECIMAL As Decimal = 550D 
 
            'Declare Accessory Constants  
            Const NEW_TIRES_DECIMAL As Decimal = 450D 
            Const NEW_HD_RADIO_DECIMAL As Decimal = 190.45D 
            Const BUILT_IN_GPS_DECIMAL As Decimal = 700D 
            Const NEW_FLOOR_MATS_DECIMAL As Decimal = 55D 
 
            'OTHER CONSTANTS  
            Const DISCOUNT_DECIMAL As Decimal = 0.2D 
            Const SALES_TAX_RATE_DECIMAL As Decimal = 0.05D 
 
            'Receive user Inputs from TextBox  
            PriceDecimal = Decimal.Parse(PriceTextBox.Text, 
Globalization.NumberStyles.Currency) 
            Trade_In_Decimal = Decimal.Parse(TradeinTextBox.Text, 
Globalization.NumberStyles.Number) 
 
            'Computing for wholesale discount, when the wholesale checkbox is checked, the wholesale discount is 
            ' price times discount or wholesale discount is zero   
            If WholesaleDealerDiscountCheckBox.Checked Then 
                Wholesale_Discount_Decimal = Decimal.Round((PriceDecimal * DISCOUNT_DECIMAL), 2) 
            Else 
                Wholesale_Discount_Decimal = 0.00D 
            End If 
 
            'COMPUTE THE COST OF EXTRAS  
 
            'TOTAL EXTRAS IS EXTERIOR PLUS ACCESSORY  
            'ONLY ONE EXTERIOR EXTRAS CAN BE SELECTED BUT ZERO OR MORE FOR ACCESSORY 
EXTRAS  
 
            ' FOR EXTERIOR 
 
            If PaintTouchUpRadioButton.Checked Then 
                TOTALEXTRAS_DECIMAL += PAINT_TOUCH_UP_DECIMAL 
 
 
            ElseIf UnderCoatRadioButton.Checked Then 
                TOTALEXTRAS_DECIMAL += UNDERCOAT_DECIMAL 
 
 
            ElseIf BothRadioButton.Checked Then 
                TOTALEXTRAS_DECIMAL = BOTH_DECIMAL 
 
            ElseIf NoneRadioButton.Checked Then 
                TOTALEXTRAS_DECIMAL += NO_EXTERIOR_EXTRAS_DECIMAL 
 
            End If 
 
 
 
            'FOR ACCESSORIES  
            If NewTiresCheckBox.Checked Then 
                TOTALEXTRAS_DECIMAL += NEW_TIRES_DECIMAL 
            End If 
 
            If NewHDradioCheckBox.Checked Then 
                TOTALEXTRAS_DECIMAL += NEW_HD_RADIO_DECIMAL 
            End If 
 
            If BuiltinGPSCheckBox.Checked Then 
                TOTALEXTRAS_DECIMAL += BUILT_IN_GPS_DECIMAL 
            End If 
 
            If NewFloorMateCheckBox.Checked Then 
                TOTALEXTRAS_DECIMAL += NEW_FLOOR_MATS_DECIMAL 
            End If 
 
            'COMPUTE THE SUBTOTAL , PRICE PLUS EXTRAS MINUS DISCOUNTS  
            SubTotal_Decimal = Decimal.Round((PriceDecimal + TOTALEXTRAS_DECIMAL - 
Wholesale_Discount_Decimal), 2)  
            'COMPUTE SALES TAX  
            If WholesaleDealerDiscountCheckBox.Checked Then                 sales_Tax_Decimal = 0.00D             Else 
                sales_Tax_Decimal = Decimal.Round((SubTotal_Decimal * SALES_TAX_RATE_DECIMAL), 2) 
            End If 
 
 
            'COMPUTE TOTAL DUE IS SUBTOTAL MINUS SALES TAX PLUS TRADE - IN 
            Total_Due_Decimal = SubTotal_Decimal - sales_Tax_Decimal + Trade_In_Decimal  
            'OUTPUT TO SCREEN  
            DiscountTextBox.Text = Wholesale_Discount_Decimal.ToString("N2") 
            ExtrasTextBox.Text = TOTALEXTRAS_DECIMAL.ToString("N2") 
            SubTotalTextBox.Text = SubTotal_Decimal.ToString("N2") 
            SalesTaxTextBox.Text = sales_Tax_Decimal.ToString("N2")             TotaldueTextBox.Text = Total_Due_Decimal.ToString("C2")              'COUNT THE NUMBER OF TIMES A BUTTON IS CLICKED              hits += 1 
 
 
            'GRAND TOTAL  
            GRANDTOTADECIMAL += Total_Due_Decimal 
 
 
        Catch ex As Exception 
            MessageBox.Show("Error in either Price or Trade-in", "Data Entry Error", 
MessageBoxButtons.OK, MessageBoxIcon.Error) 
        End Try 
 
    End Sub 
 
    Private Sub TotalsButton_Click(sender As Object, e As EventArgs) Handles 
TotalsButton.Click 
        Try 
            'Display the grandTotal ( total of all total dues) 
            'and a count of the number of vehicles sold  
 
 
 
            Dim GRANDSALE As Decimal = GRANDTOTADECIMAL 
 
            Dim MessageString As String = "Grand Total: " & GRANDSALE.ToString("C2") & 
ControlChars.NewLine & "NUMBER OF CARS SOLD: " & hits.ToString("N0") 
 
            MessageBox.Show(MessageString, "GRAND TOTAL AND NUMBER OF CARS SOLD", 
MessageBoxButtons.OK, MessageBoxIcon.Information) 
 
        Catch exArithmeticException As ArithmeticException 
            MessageBox.Show("No Vehicles sold", "No Sales ", MessageBoxButtons.OK, 
MessageBoxIcon.Information) 
        Catch ex As Exception 
 
        End Try 
    End Sub 
 
    Private Sub ResetButton_Click(sender As Object, e As EventArgs) Handles ResetButton.Click 
        'clear all input and output data and uncheck all checkboxes 
        LotNumberTextBox.Clear() 
        YearTextBox.Clear() 
        VehicleMakeModeTextBox.Clear() 
        PriceTextBox.Clear() 
        DiscountTextBox.Clear() 
        ExtrasTextBox.Clear() 
        SubTotalTextBox.Clear() 
        SalesTaxTextBox.Clear() 
        TradeinTextBox.Text = "0.00" 
        TotaldueTextBox.Clear() 
        NoneRadioButton.Checked = True 
        NewTiresCheckBox.Checked = False 
        NewHDradioCheckBox.Checked = False 
        BuiltinGPSCheckBox.Checked = False 
        NewFloorMateCheckBox.Checked = False 
        LotNumberTextBox.Focus() 
 
    End Sub 
 
    Private Sub Form1_Validating(sender As Object, e As CancelEventArgs) Handles 
Me.Validating 
        e.Cancel = False 
    End Sub 
 
    Private Sub ExitButton_Click(sender As Object, e As EventArgs) Handles 
ExitButton.Click 
 
        Dim messagedisplaystring As String = "Do you want to close the form" 
        Dim buttondialogueresult As DialogResult = MessageBox.Show(messagedisplaystring, 
"Quit", MessageBoxButtons.YesNo, MessageBoxIcon.Question, 
MessageBoxDefaultButton.Button2) 
        If buttondialogueresult = DialogResult.Yes Then 
            Me.Close() 
        End If 
    End Sub 
 
    Private Sub LotNumberTextBox_Validating(sender As Object, e As CancelEventArgs) 
Handles LotNumberTextBox.Validating 
 
        If LotNumberTextBox.Text = String.Empty Then 
            e.Cancel = True 
            ErrorProvider1.SetError(LotNumberTextBox, "Please it cannot be empty")             LotNumberTextBox.SelectAll() 
        Else 
            ErrorProvider1.SetError(LotNumberTextBox, "") 
 
        End If 
 
 
 
    End Sub 
 
    Private Sub ComuteButton_Validating(sender As Object, e As CancelEventArgs) Handles 
ComuteButton.Validating 
 
    End Sub 
 
    Private Sub LotNumberTextBox_TextChanged(sender As Object, e As EventArgs) Handles 
LotNumberTextBox.TextChanged 
 
    End Sub 
 
    Private Sub YearTextBox_Validating(sender As Object, e As CancelEventArgs) Handles YearTextBox.Validating 
        If YearTextBox.Text = String.Empty Then 
            e.Cancel = True 
            ErrorProvider1.SetError(YearTextBox, "please enter a year")         Else 
            ErrorProvider1.SetError(YearTextBox, "") 
        End If 
    End Sub 
 
    Private Sub VehicleMakeModeTextBox_Validating(sender As Object, e As CancelEventArgs) 
Handles VehicleMakeModeTextBox.Validating 
        If VehicleMakeModeTextBox.Text = String.Empty Then 
            e.Cancel = True 
            ErrorProvider1.SetError(VehicleMakeModeTextBox, "Please it cannot be empty")         Else 
            ErrorProvider1.SetError(VehicleMakeModeTextBox, "") 
        End If 
    End Sub 
 
    Private Sub PriceTextBox_Validating(sender As Object, e As CancelEventArgs) Handles 
PriceTextBox.Validating 
 
        If IsNumeric(PriceTextBox.Text) = False OrElse Decimal.Parse(PriceTextBox.Text, Globalization.NumberStyles.Currency) <= 0D Then 
            e.Cancel = True 
            ErrorProvider1.SetError(PriceTextBox, "Please price must be greater than zero")         Else 
            ErrorProvider1.SetError(PriceTextBox, "") 
        End If 
 
 
    End Sub 
 
    Private Sub TradeinTextBox_Validating(sender As Object, e As CancelEventArgs) Handles 
TradeinTextBox.Validating 
        If IsNumeric(TradeinTextBox.Text) = False OrElse 
Decimal.Parse(TradeinTextBox.Text, Globalization.NumberStyles.Currency) < 0D Then 
            e.Cancel = True 
            ErrorProvider1.SetError(TradeinTextBox, "Please Trade In  must be zero or more")         Else 
            ErrorProvider1.SetError(TradeinTextBox, "") 
        End If 
 
    End Sub 
 
 
End Class 
